datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int            @id @default(autoincrement())
  username   String         @unique
  password   String
  role       UserRole
  activities UserActivity[]
}

model Buyer {
  id          Int     @id @default(autoincrement())
  name        String
  contactName String
  mobile      String
  gstNumber   String?
  panNumber   String?
  tinNumber   String?
  orgName     String
  orgAddress  String
  orders      Order[]
}

model OrderProfile {
  id                      Int          @id @default(autoincrement())
  name                    String
  type                    ProfileType
  material                MaterialType
  materialRate            Float // in INR/mm
  cutSizeWidth            Int // in mm
  cutSizeHeight           Int // in mm
  burningWastage          Float // as percentage
  heatTreatmentRate       Float // in INR/kg
  heatTreatmentInefficacy Float // as percentage
  availableInventory      Int // in units
  orders                  Order[]
}

model Order {
  id              Int          @id @default(autoincrement())
  orderNumber     String       @unique
  createdAt       DateTime     @default(now())
  buyerId         Int
  buyer           Buyer        @relation(fields: [buyerId], references: [id])
  profileId       Int
  profiles        OrderProfile @relation(fields: [profileId], references: [id])
  status          OrderStatus
  grandTotal      Float // in INR
  materialCost    Float // in INR
  processCosts    Float // in INR
  turningRate     Float // in INR
  teethCount      Int
  module          Int
  face            Int
  weight          Float // in kg
  htCost          Float // in INR
  totalOrderValue Float // in INR
  profitMargin    Float // as percentage
}

model Inventory {
  id             Int          @id @default(autoincrement())
  materialType   MaterialType
  materialWeight Float // in kg
  cutSizeWidth   Int // in mm
  cutSizeHeight  Int // in mm
  relatedPOs     String[]
}

model Quotation {
  id               Int      @id @default(autoincrement())
  purchaserId      Int
  poNumber         String
  dateCreated      DateTime @default(now())
  profileId        Int
  finishSizeWidth  Int // in mm
  finishSizeHeight Int // in mm
  turningRate      Float // in INR
  teethCount       Int
  module           Int
  face             Int
  weight           Float // in kg
  materialCost     Float // in INR
  tcTgPrice        Float // in INR
  htCost           Float // in INR
  processCosts     Json
  grandTotal       Float // in INR
  profitMargin     Float // as percentage
  totalOrderValue  Float // in INR
}

model UserActivity {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  activity  String
  timestamp DateTime @default(now())
}

enum UserRole {
  SuperAdmin
  Admin
}

enum OrderStatus {
  Draft
  Accepted
  RawMaterialFinalized
  InProcess
  PendingFulfillment
  PendingPayment
  Dispatched
}

enum ProfileType {
  Pinion
  Gear
}

enum MaterialType {
  CR_5
  EN_9
}
